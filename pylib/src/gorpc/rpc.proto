

package protobuf.socketrpc;

option java_package = "com.googlecode.protobuf.socketrpc";
option java_outer_classname = "SocketRpcProtos";

message Request {

  // RPC service full name
  required string service_name = 1;
  
  // RPC method name
  required string method_name = 2;
  
  // RPC request proto
  required bytes request_proto = 3;
}

message Response {

  // RPC response proto
  optional bytes response_proto = 1;
  
  // Error, if any
  optional string error = 2;
  
  // Was callback invoked
  optional bool callback = 3 [default = false];
  
  // Error Reason
  optional ErrorReason error_reason = 4;
}

// Possible error reasons
// The server-side errors are returned in the response from the server.
// The client-side errors are returned by the client-side code when it doesn't 
// have a response from the server.
enum ErrorReason {

  // Server-side errors
  BAD_REQUEST_DATA = 0; // Server received bad request data
  BAD_REQUEST_PROTO = 1; // Server received bad request proto
  SERVICE_NOT_FOUND = 2; // Service not found on server
  METHOD_NOT_FOUND = 3; // Method not found on server
  RPC_ERROR = 4; // Rpc threw exception on server
  RPC_FAILED = 5; // Rpc failed on server
  
  // Client-side errors (these are returned by the client-side code)
  INVALID_REQUEST_PROTO = 6; // Rpc was called with invalid request proto
  BAD_RESPONSE_PROTO = 7; // Server returned a bad response proto
  UNKNOWN_HOST = 8; // Could not find supplied host
  IO_ERROR = 9; // I/O error while communicating with server
}
